{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"HomeLab wiki","text":""},{"location":"infrastructure/networking/certificates/","title":"Certificates","text":""},{"location":"infrastructure/networking/certificates/#lets-encrypt","title":"Lets Encrypt","text":"<p>Renewing SSL certificates (Expires every 90 days)</p> <pre><code>#/usr/bin/env bash\n\nexport CLOUDFLARE_DNS_API_TOKEN=XXXXXXXX\n\nlego \\ \n--email email@domain.com \\ \n--dns cloudflare \\ \n--domains \"domain.com\" \\ \n--domains \"*.domain.com\" \\ \n--domains \"*.dev.domain.com\" run\n\nls .lego/certificates/\n</code></pre> <p>Copy .crt and .key to Caddy, HAProxy, Nginx config directory.</p> <p>lego</p>"},{"location":"infrastructure/networking/vpn/","title":"VPN","text":""},{"location":"infrastructure/networking/vpn/#nebula","title":"Nebula","text":""},{"location":"infrastructure/networking/vpn/#static-vpn-lighthouses-ips","title":"Static VPN Lighthouses IPs","text":"IP Host 192.168.100.1 lighthouse"},{"location":"infrastructure/networking/vpn/#static-vpn-client-ips","title":"Static VPN Client IPs","text":"IP Host 192.168.100.10 mini 192.168.100.11 asahi 192.168.100.12 gaming 192.168.100.13 dockingbay94 192.168.100.14 octoprint 192.168.100.15 wololo <p>systemd unit file</p>"},{"location":"infrastructure/servers/","title":"Hosts","text":""},{"location":"infrastructure/servers/#mini","title":"Mini","text":"<ul> <li>Excalidraw</li> <li>Gitea</li> <li>Grafana</li> <li>Hydra</li> <li>Navidrone</li> <li>Postgres</li> <li>Prometheus</li> <li>Rewind Storybook</li> <li>Rewind Database</li> <li>Rewind Server</li> <li>Speakeasy</li> <li>Vaultwarden</li> <li>Wiki</li> <li>Woodpecker</li> </ul>"},{"location":"infrastructure/servers/#octoprint","title":"Octoprint","text":"<ul> <li>OctoPrint</li> <li>syncthing</li> </ul>"},{"location":"infrastructure/servers/#dockingbay94","title":"Dockingbay94","text":"<ul> <li>k3s</li> </ul>"},{"location":"infrastructure/servers/#pihole","title":"Pihole","text":"<ul> <li>pihole</li> </ul>"},{"location":"infrastructure/servers/#lighthouse","title":"Lighthouse","text":"<ul> <li>nebula</li> </ul>"},{"location":"reference/nix/","title":"nix","text":""},{"location":"reference/nix/#oci","title":"OCI","text":"<p>Build and run this wiki</p> <pre><code>nix build .#container\ndocker load &lt; result\ndocker run -p 80:80 wiki:latest caddy file-server -r /site\n\nOR\n\ndocker run -p 80:80 wiki:latest\n</code></pre>"},{"location":"reference/systemd/","title":"systemd","text":""},{"location":"reference/systemd/#octoprint","title":"Octoprint","text":"<p>/etc/systemd/system/nebula.service <pre><code>[Unit]\nDescription=nebula\nAfter=network.target\nStartLimitIntervalSec=0\n\n[Service]\nCapabilityBoundingSet=CAP_NET_ADMIN\nAmbientCapabilities=CAP_NET_ADMIN\nExecStart=/snap/nebula/current/bin/nebula -config /etc/nebula/config.yaml\nRestart=always\nRestartSec=1\nUser=pi\nType=simple\n\n[Install]\nWantedBy=multi-user.target\n</code></pre></p>"},{"location":"services/hydra/","title":"Hydra","text":""},{"location":"services/hydra/#setting-basic-manual-job","title":"Setting basic manual job","text":"<ul> <li>Admin &gt; Create Project</li> <li>Fill out basic info</li> <li>Actions &gt; Create Jobset</li> </ul> State Value identifier main type flake description flake description repo url ex: https://github.com/icecreammatt/wiki flake URI git url ex: github:icecreammatt/wiki check interval 0 schedules shares 1 evals to keep 3 <ul> <li>Actions &gt; Evaluate Jobset</li> <li>Home &gt; Projects &gt;  &gt; Evaluations &gt; #"},{"location":"services/hydra/#flake-setup","title":"Flake setup","text":"<p>Add new value to outputs. See wiki or tape-encoder for examples</p> <pre><code>    hydraJobs.\"tester\" = self.defaultPackage;\n</code></pre>"},{"location":"services/wiki/","title":"Wiki","text":""},{"location":"services/wiki/#welcome-to-mkdocs","title":"Welcome to MkDocs","text":"<p>For full documentation visit mkdocs.org.</p>"},{"location":"services/wiki/#commands","title":"Commands","text":"<ul> <li><code>mkdocs new [dir-name]</code> - Create a new project.</li> <li><code>mkdocs serve</code> - Start the live-reloading docs server.</li> <li><code>mkdocs build</code> - Build the documentation site.</li> <li><code>mkdocs -h</code> - Print help message and exit.</li> </ul>"},{"location":"services/wiki/#project-layout","title":"Project layout","text":"<pre><code>mkdocs.yml    # The configuration file.\ndocs/\n    index.md  # The documentation homepage.\n    ...       # Other markdown pages, images and other files.\n</code></pre>"}]}